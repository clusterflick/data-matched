on:
  workflow_dispatch:
  repository_dispatch:
    types: [release_event]

name: Match Data

jobs:
  match_with_imdb:
    name: Match with IMDB
    runs-on: ubuntu-latest
    env:
      MOVIEDB_API_KEY: ${{ secrets.MOVIEDB_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
      - run: npm install
      - uses: robinraju/release-downloader@v1
        with:
          repository: "clusterflick/data-combined"
          latest: true
          fileName: "*"
          out-file-path: "combined-data"
      - name: Match Data
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 60
          retry_wait_seconds: 30
          max_attempts: 5
          command: npx clusterflick/scripts match imdb

  match_with_letterboxd:
    name: Match with Letterboxd
    runs-on: ubuntu-latest
    env:
      MOVIEDB_API_KEY: ${{ secrets.MOVIEDB_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
      - run: npm install
      - uses: robinraju/release-downloader@v1
        with:
          repository: "clusterflick/data-combined"
          latest: true
          fileName: "*"
          out-file-path: "combined-data"
      - name: Match Data
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 60
          retry_wait_seconds: 30
          max_attempts: 5
          command: npx clusterflick/scripts match letterboxd

  match_with_metacritic:
    name: Match with Metacritic
    runs-on: ubuntu-latest
    env:
      MOVIEDB_API_KEY: ${{ secrets.MOVIEDB_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
      - run: npm install
      - uses: robinraju/release-downloader@v1
        with:
          repository: "clusterflick/data-combined"
          latest: true
          fileName: "*"
          out-file-path: "combined-data"
      - name: Match Data
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 60
          retry_wait_seconds: 30
          max_attempts: 5
          command: npx clusterflick/scripts match metacritic

  match_with_rotten_tomatoes:
    name: Match with Rotten Tomatoes
    runs-on: ubuntu-latest
    env:
      MOVIEDB_API_KEY: ${{ secrets.MOVIEDB_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
      - run: npm install
      - uses: robinraju/release-downloader@v1
        with:
          repository: "clusterflick/data-combined"
          latest: true
          fileName: "*"
          out-file-path: "combined-data"
      - name: Match Data
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 60
          retry_wait_seconds: 30
          max_attempts: 5
          command: npx clusterflick/scripts match rottentomatoes

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      [
        match_with_imdb,
        match_with_letterboxd,
        match_with_metacritic,
        match_with_rotten_tomatoes,
      ]
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: matched-data/
          merge-multiple: true
      - name: Generate Tag
        run: echo "TAG=$(TZ=Europe/London date +'%Y%m%d.%H%M%S')" >> $GITHUB_ENV
      - uses: ncipollo/release-action@v1
        id: release
        with:
          allowUpdates: false
          artifactErrorsFailBuild: true
          artifacts: "matched-data/*"
          makeLatest: true
          tag: ${{ env.TAG }}
          commit: main
          body: |
            Created by job ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: Output summary
        run: |
          echo "ðŸ”– New release - ${{ steps.release.outputs.html_url }}" >> $GITHUB_STEP_SUMMARY

      - name: Repository Dispatch for clusterflick.com
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT }}
          repository: clusterflick/clusterflick.com
          event-type: release_event
